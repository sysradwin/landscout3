angular.module('landscout', [])




var geolocation = function()  {
	var getPosition = function(cbSuccess, cbError, cbNoGeo) {
		if (navigator.geolocation){
			navigator.geolocation.getCurrentPosition(cbSuccess, cbError);
		}
		else{
			cbNoGeo();
		}
	}
	return {
		getPosition : getPosition
	};
};


var locationListCtrl = function ($scope, landscoutData, geolocation) {
  $scope.message = "Checking your location";


  $scope.getData = function (position) {
    var lat = position.coords.latitude,
        lng = position.coords.longitude;
    $scope.message = "Searching for nearby places";

    landscoutData.locationByCoords(lat, lng).then(function successCallback(response){
    	$scope.message = response.data.length > 0 ? "" : "No locations found nearby.";
    	$scope.data = response.data


		$scope.sendActivity = function(cat){
			if (cat === 1){
				$scope.search = "Camping"

			}
			else if (cat === 2){
				$scope.search = "Fishing"
			}
			else if (cat === 3){
				$scope.search = "Hunting"
			}
		}

		

    	}, function errorCallback(e){
    		$scope.message = "Sorry, something has gone wrong.  It don't work!"
    	})
    }


  $scope.showError = function (error) {
    $scope.$apply(function() {
      $scope.message = error.message;
    });
  };

  $scope.noGeo = function () {
    $scope.$apply(function() {
      $scope.message = "Geolocation is not supported by this browser.";
    });
  };

  geolocation.getPosition($scope.getData,$scope.showError,$scope.noGeo);


};



var landscoutData = function($http){
	

	var locationByCoords = function(lat, lng){


		return $http.get('/api/locations?lat=' + lat + '&lng=' + lng + '&maxDistance=300000000000');

	};

	return { locationByCoords : locationByCoords };

	}





angular
	.module('landscout')
	.controller('locationListCtrl', locationListCtrl)
	.service('landscoutData', landscoutData)
	.service('geolocation', geolocation);
